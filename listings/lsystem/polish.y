/**********************************************************
 * Файл polish.y. Калькулятор с обратной польской нотацией. 
 **********************************************************/ 
 %{
 #include    <stdio.h>
 #include    <ctype.h>
 %}
 %token      NUMBER
 %% 
/** Правила грамматики и действия: ***********************/
 input   :    /* пусто */
         | input line
         ;
 line    :  '\n'        
         |  exp '\n'        { printf( "%d\n", $1 );        }
         ;
 exp     : NUMBER           { $$ = $1;                     }
         | exp  exp  '+'    { $$ = $1 + $2;                }
         | exp  exp  '-'    { $$ = $1 - $2;                }
         | exp  exp  '*'    { $$ = $1 * $2;                }
         | exp  exp  '/'    { $$ = $1 / $2;                }
 %%
/**********************************************************
 * Лексический анализатор 
 **********************************************************/
 int  yylex ()
 {
 int  c, d;
     /* пропустить пробелы: */
     while ( ( c = getchar() ) == ' ' )
     ;
    /* если цифра --- выделить число: */ 
    if ( c >= '0'  && c <= '9' ) 
    { 
          for ( d = c - '0'; (c = getchar()) >= '0' && c <= '9'; ) 
          d = d*10 + c - '0';
    ungetc( c, stdin );
    yylval = d;
   return  NUMBER;
   }
 return  c;
 }
/*********************************************************/
 int main ()
 {
 return  yyparse ();
 }
 /** вызывается yyparse в случае ошибки: *******************/
 yyerror( mes ) 
 char  *mes; 
 {  
 printf( "%s\n", mes ); 
 }
 /** конец файла polish.y **********************************/
